<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/
-->

<xwikidoc version="1.1">
  <web>PhenoTips</web>
  <name>DBWebHomeSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1401822204000</creationDate>
  <parent>PhenoTips.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1401822204000</date>
  <contentUpdateDate>1401822204000</contentUpdateDate>
  <version>1.1</version>
  <title>Phenotype database</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content/>
  <object>
    <name>PhenoTips.DBWebHomeSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>406c6371-adb7-4468-ad28-c12a5cb5cf83</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>document.observe('xwiki:livetable:displayComplete', function(tableEvent){
  $(tableEvent.memo.tableId).select("tr.xwiki-livetable-display-filters td input").each(function(item) {
    item.placeholder = "$services.localization.render('phenotips.livetable.filter.placeholder')";
  });
});
document.observe('xwiki:livetable:newrow', function(tableEvent){
  tableEvent.memo.row.select(".actionedit").invoke('setAttribute', 'title', 'Edit');
  tableEvent.memo.row.select(".actiondelete").invoke('setAttribute', 'title', 'Delete');
  tableEvent.memo.row.select(".actiondelete").invoke('observe', 'click', function(clickEvent){
    clickEvent.stop();
    var item = clickEvent.element();
    item.blur();
    if (item.disabled) {
      // Do nothing if the button was already clicked and it's waiting for a response from the server.
      return;
    } else {
      var form_token = $$('meta[name=form_token]')[0].content;
      new XWiki.widgets.ConfirmedAjaxRequest(
        /* Ajax request URL */
        item.readAttribute('href') + "?confirm=1&amp;form_token=" + form_token + (Prototype.Browser.Opera ? "" : "&amp;ajax=1"),
        /* Ajax request parameters */
        {
          onCreate : function() {
            // Disable the button, to avoid a cascade of clicks from impatient users
            item.disabled = true;
          },
          onSuccess : function() {
            // Refresh the table after deleting the row
            var table = tableEvent.memo.table;
            table.clearCache();
            table.showRows(table.lastOffset, table.limit);
          },
          onFailure : function() {
            // Better luck next time!
            item.disabled = false;
          }
        },
        /* Interaction parameters */
        {
          confirmationText: "$services.localization.render('core.delete.confirm')"
        }
      );
    }
  });
});</code>
    </property>
    <property>
      <name>Confirmed AJAX deletion</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>PhenoTips.DBWebHomeSheet</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>384096ac-eb19-4fea-a2c6-337b350ca71b</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>document.observe('xwiki:dom:loading', function() {
  var suggestionsMapping = {
        "hpo" : {
            script: new XWiki.Document('SolrService', 'PhenoTips').getURL("get") + "?",
            varname: "q",
            noresults: "$services.localization.render('phenotips.DBWebHomeSheet.noResults')",
            json: true,
            resultsParameter : "rows",
            resultId : "id",
            resultValue : "name",
            resultAltName: "synonym",
            resultCategory : "term_category",
            resultInfo : {},
            tooltip: 'phenotype-info',
            enableHierarchy: true,
            resultParent : "is_a",
            fadeOnClear : false,
            timeout : 30000
        },
        "omim" : {
            script: new XWiki.Document('SolrService', 'PhenoTips').getURL("get", "vocabulary=omim") + "&amp;",
            varname: "q",
            noresults: "$services.localization.render('phenotips.DBWebHomeSheet.noResults')",
            json: true,
            resultsParameter : "rows",
            resultId : "id",
            resultValue : "name",
            resultInfo : {
                           "Locus"      : {"selector"  : "Locus"}
                         },
            tooltip: 'omim-disease-info',
            enableHierarchy: false,
            fadeOnClear : false,
            timeout : 30000
        }
  };
  // =================================================================================
  // Suggest maps
  var pickerSpecialClassOptions = {
    'defaultPicker' : {},
    'generateShortList' : {
                  'showKey' : true,
                  'showTooltip' : false,
                  'showDeleteTool' : true,
                  'enableSort' : false,
                  'showClearTool' : true,
                  'inputType': 'checkbox'
                },
    'generateCheckboxes' : {
                  'showKey' : false,
                  'showTooltip' : false,
                  'showDeleteTool' : true,
                  'enableSort' : false,
                  'showClearTool' : true,
                  'inputType': 'checkbox',
                  'listInsertionElt' : '.label-other',
                  'listInsertionPosition' : 'after',
                  'acceptFreeText' : true
                }
  };

  var enhanceDialog = function(content) {
    // =============================================================================
    // Prepare to copy existing filters:
    var tableFilters = $('patients-topfilters');
    if (tableFilters) {
      tableFilters = tableFilters.down('ul.filters');
    }
    //============================================================================
    // Copy all text inputs, checkboxes and radio buttons
    if (tableFilters) {
      content.select('input[type="text"]').each(function(input) {
        var source = tableFilters.down('input[type="' + input.type + '"][name="' + input.name + '"]');
        if (source) {
          input.value = source.value;
        }
      });
      content.select('input[type="radio"], input[type="checkbox"]').each(function(input) {
        var source = tableFilters.down('input[type="' + input.type + '"][name="' + input.name + '"][value="' + input.value + '"]');
        if (source) {
          input.checked = source.checked;
        }
      });
    }
    // =============================================================================
    // Copy entries from users suggest
    if (tableFilters) {
      content.select('input.suggestUsers').each(function(input) {
        var source = tableFilters.down('input[type="text"][name="' + input.name + '"]');
        var selectionContainer = source &amp;&amp; source.previous('ul.accepted-suggestions')
        if (selectionContainer) {
          selectionContainer.select('li').each(function(entry) {
            var entryData = {
              'id': entry.down('.user-alias').childNodes[0].nodeValue,
              'value': entry.down('input[type="hidden"]').value,
              'info': entry.down('img').alt,
              'icon' : entry.down('img').src,
              'hint' : ''
            };
            input.__x_suggest.options.callback(entryData);
          });
        } // done with selected entries
      });
      // TODO: Groups
    }
    // =============================================================================
    // Phenotype suggest: create suggest and copy existing entries
    if (typeof(PhenoTips.widgets.Suggest) != "undefined") {
      var keys = Object.keys(suggestionsMapping);
      var specialClasses = Object.keys(pickerSpecialClassOptions);
      for (var i = 0; i &lt; keys.length; i++) {
        var selector = 'input.suggest' + keys[i].capitalize();
        content.select(selector).each(function(item) {
          if (!item.hasClassName('initialized')) {
            item._customOptions = Object.clone(suggestionsMapping[keys[i]]);
            item._restriction = item.up('.phenotype-group')
            if (item._restriction) {
              item._restriction = item._restriction.down('input[name=_category]');
              if (item._restriction &amp;&amp; item._restriction.value.strip() != '') {
                item._restriction = item._restriction.value.strip().split(",");
              } else {
                item._restriction = null;
              }
            }
            if (item._customOptions.queryProcessor &amp;&amp; item._restriction) {
              item._customOptions.queryProcessor = Object.clone(item._customOptions.queryProcessor);
              item._customOptions.queryProcessor.restriction = {
                'term_category' : item._restriction
              }
            }
            // Create the Suggest.
            item._suggest = new PhenoTips.widgets.Suggest(item, item._customOptions);
            if (item.hasClassName('multi') &amp;&amp; typeof(PhenoTips.widgets.SuggestPicker) != "undefined") {
              var multiSuggestOptions = {};
              for (var j = 0; j &lt; specialClasses.length; j++) {
                if (item.hasClassName(specialClasses[j])) {
                  multiSuggestOptions = pickerSpecialClassOptions[specialClasses[j]];
                  break;
                }
              }
              var suggestPicker = new PhenoTips.widgets.SuggestPicker(item, item._suggest, multiSuggestOptions);
              item._suggestPicker = suggestPicker;

              // Format the predefined value
              item.value.split(',').each(function(value) {
                item._suggestPicker.addItem(value, value, '', '');
              });
              item.value = '';
            }
            if (tableFilters) {
              // Integrate the custom fields
              // 1. find the container element displaying them
              var source = tableFilters.down('input[type="text"][name="' + item.name + '"]');
              var selectionContainer = source &amp;&amp; source.next('.accepted-suggestions');
              if (selectionContainer) {
                // 2. find all the values and display them as part of the multi suggest picker
                var tmp = suggestPicker.silent;
                suggestPicker.silent = true;
                selectionContainer.select('.accepted-suggestion').each(function(entry) {
                  var value =  entry.down('input[type="checkbox"]').value;
                  var text = entry.down('.value').innerHTML;
                  var category = entry.down('.term-category');
                  suggestPicker.addItem(value, text, '', category || '');
                });
                suggestPicker.silent = tmp;
              }
            } // done with selected entries
            item.addClassName('initialized');
          }
        });
      }
    }

    //============================================================================
    // Date pickers: create pickers and copy existing dates
    if (typeof (XWiki.widgets.DateTimePicker) != "undefined") {
      var crtYear = new Date().getFullYear();
      if (tableFilters) {
        content.select('.xwiki-date').each(function(input) {
          var source = tableFilters.down('input[name="' + input.name + '"]');
          if (source) {
            input.value = source.value;
            input.alt = source.alt;
          }
        });
      }
      window.dateTimePicker = new XWiki.widgets.DateTimePicker({year_range: [crtYear - 99, crtYear + 1]});
    }
    
    //============================================================================
    // Column selection
    var columnList = content.down('.section.columns ul');
    if (columnList) {
      var selectionTools = new Element('div', { 'class' : 'selection-tools' }).update("$services.localization.render('phenotips.DBWebHomeSheet.colSelect.label') ");
      var all = new Element('span', {'class' : 'selection-tool select-all'}).update("$services.localization.render('phenotips.DBWebHomeSheet.colSelect.all')");
      var none = new Element('span', {'class' : 'selection-tool select-none'}).update("$services.localization.render('phenotips.DBWebHomeSheet.colSelect.none')");
      var invert = new Element('span', {'class' : 'selection-tool select-invert'}).update("$services.localization.render('phenotips.DBWebHomeSheet.colSelect.invert')");
      var restore = new Element('span', {'class' : 'selection-tool select-restore'}).update("$services.localization.render('phenotips.DBWebHomeSheet.colSelect.restore')");
      selectionTools.insert(all).insert(' · ').insert(none).insert(' · ').insert(invert).insert(' · ').insert(restore);

      columnList.select('input[type=checkbox]').each(function(elt) {elt._originallyChecked = elt.checked});

      all.observe('click', function(event) {
        columnList.select('input[type=checkbox]').each(function(elt) {elt.checked = true});
      });
      none.observe('click', function(event) {
        columnList.select('input[type=checkbox]').each(function(elt) {elt.checked = false});
      });
      invert.observe('click', function(event) {
        columnList.select('input[type=checkbox]').each(function(elt) {elt.checked = !elt.checked});
      });
      restore.observe('click', function(event) {
        columnList.select('input[type=checkbox]').each(function(elt) {elt.checked = elt._originallyChecked});
      });
      columnList.insert({'before' : selectionTools});
    }

    //============================================================================
    // Column selection
    var cancelButton = $('export_cancel');
    if (cancelButton) {
      cancelButton.observe('click', function(event) {
        content.__dialog &amp;&amp; content.__dialog.closeDialog();
      });
    }

    //==========================================================================
    // Live updates
    var liveMatchCounter = $('filter-match-count');
    var form = liveMatchCounter &amp;&amp; liveMatchCounter.up('form');
    if (liveMatchCounter &amp;&amp; form &amp;&amp; !liveMatchCounter.initialized) {
      liveMatchCounter.initialized = true;
      var lastRequestID = 0;
      var updateMatchCounter = function(event) {
        var url = "$xwiki.getURL('PhenoTips.ExportFilter', 'get')?count=true&amp;" + form.serialize();
        var requestID = ++lastRequestID;
        var ajx = new Ajax.Request(url, {
          method: 'get',
          onSuccess: function(response) {
            if (requestID &lt; lastRequestID) {return;}
            liveMatchCounter.update(response.responseText);
          },
          onFailure: function (response) {}
        });
      };
      updateMatchCounter();
      content.select('.xwiki-date').invoke('observe', 'xwiki:form:field-value-changed', updateMatchCounter);
      document.observe('custom:selection:changed', updateMatchCounter);
      document.observe('xwiki:multisuggestpicker:selectionchanged', updateMatchCounter);
      content.select('input[type=radio]').invoke('observe', 'click', updateMatchCounter);
      content.select('input[type=checkbox]').invoke('observe', 'click', updateMatchCounter);
      content.select('input[name=external_id]').invoke('observe', 'keyup', updateMatchCounter);
    }
  };
  var exportTools = $$('.phenotips_export_tool');
  if (exportTools &amp;&amp; exportTools.length != 0) {
    exportTools.each(function(exportTool) {
      exportTool.observe('click', function(event) {
        event.stop();
        var dialog = new PhenoTips.widgets.ModalPopup('&lt;img src="$xwiki.getSkinFile('icons/xwiki/ajax-loader-large.gif')"/&gt;', false, {'title':"$services.localization.render('phenotips.DBWebHomeSheet.exportPreferences.title')", 'verticalPosition': 'top', 'removeOnClose': true, 'extraClassName': 'export-dialog'});
        dialog.showDialog();
        // =================================================================================
        // Generate the dialog content
        new Ajax.Request(new XWiki.Document('ExportPreferences', 'PhenoTips').getURL('get', 'space=' + /space=([^&amp;]+)/.exec(exportTool.href)[1]), {
          parameters: {export_endpoint: exportTool.readAttribute("href"), export_id: exportTool.readAttribute("id")},
          onSuccess: function(transport) {
            var content = dialog.dialogBox._x_contentPlug;
            content.update(transport.responseText);
            content.__dialog = dialog;
            document.fire('xwiki:dom:updated', {'elements': [content]});
          }
        });
      });
    });
  }

  document.observe('xwiki:multisuggestpicker:selectionchanged', function() {
    document.fire('xwiki:livetable:patients:filtersChanged');
  });
  ['xwiki:dom:loaded', 'xwiki:dom:updated'].each(function(eventName) {
    document.observe(eventName, function(event) {
      var elements = event.memo &amp;&amp; event.memo.elements || [document.documentElement];
      elements &amp;&amp; elements.each(function(item) {
        // We defer so that the standard suggests have time to initialize before applying the enhanced suggests
        enhanceDialog.defer(item);
      });
    });
  });
});</code>
    </property>
    <property>
      <name>Export preferences</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>PhenoTips.DBWebHomeSheet</name>
    <number>2</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>d9b727a8-4e6b-498f-8584-80dcac64c352</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>document.observe('xwiki:dom:loaded', function() {
  $$('.xwiki-livetable-topfilters-container .toggle-filters').invoke('observe', 'click', function(event) {
    event.stop();
    $('patients-topfilters').toggleClassName('collapsed');
  });
  $('patients-topfilters') &amp;&amp; $('patients-topfilters').addClassName('collapsed');
});</code>
    </property>
    <property>
      <name>Hide Filters button behavior</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>PhenoTips.DBWebHomeSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>be904bc0-bfcc-4272-a0c1-88fcf238824d</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#xwikicontent {
  overflow: visible;
}
#document-title h1 {
  border: 0 none;
}
#patients-topfilters .toggle-filters:before {
  content: "▼ ";
}
#patients-topfilters.collapsed .toggle-filters:before {
  content: "► ";
}
#patients-topfilters.collapsed .filters {
  display: none;
}</code>
    </property>
    <property>
      <name>Minor layout fix</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>PhenoTips.DBWebHomeSheet</name>
    <number>1</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>6c9f3147-838e-4ae3-a17d-6b9ab4531766</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#template("colorThemeInit.vm")
.export-dialog {
  width: 80% !important;
}
.export-dialog .xform .xHint {
  margin: 0;
}
.filters {
  list-style-position: outside !important;
}
.filters ul {
  list-style-type: none;
  margin: 0 0 1.5em;
  padding: 0;
  font-size: .9em;
}
.filters ul label {
  font-weight: bold;
}
.filters input[type=text] {
  width: 99%;
  display: block;
}

.date-range {
  clear: both;
}
.date-range label {
  box-sizing: border-box;
  display: inline-block;
  font-size: .9em;
  font-style: italic;
  width: 50%;
  padding-left: 0.5em;
}
.date-range label:first-child {
  padding-left: 0;
  padding-right: 0.5em;
}
.xform input[type="text"] {
  box-sizing: border-box;
  width: 100%;
}
.calendar_date_select, .suggestItems {
  z-index : 300000 !important;
}

.export-dialog .section {
  float: left;
  width: 46%;
  padding: 0 2% 1em;
  margin: 0;
  border-radius: .6em;
}
.export-dialog .section:hover {
  background-color: $theme.highlightColor;
}

.export-dialog .section h3 {
  margin-top: 0;
}

.export-dialog .section .selection-tools {
  margin: 0 0 1em;
}
.export-dialog .section .selection-tool {
  color: $theme.textPrimaryColor;
  cursor: pointer;
  font-style: italic;
}
.export-dialog .section .selection-tool:hover {
  color: $theme.linkColor;
}

.export-dialog .buttons {
  clear: both;
}

.export-dialog .step {
  display: inline-block;
  height: 1.2em;
  width: 1.2em;
  border-radius: .6em;
  background: $theme.titleColor;
  color: $theme.backgroundSecondaryColor;
  text-align: center;
  font-size: .87em;
  margin-bottom: .2em;
}

.export-dialog .field-list {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.xdialog-modal-container {
  z-index: 400000 !important;
}
.xdialog-box {
  max-width: 600px;
  width: inherit;
}
.xdialog-box .buttons {
  margin-left: 25px;
  margin-top: 0px;
}
.xdialog-box .button {
  width: 100px;
}
.xdialog-box .question {
  padding: 4px 0 6px 25px;
  white-space: nowrap;
}</code>
    </property>
    <property>
      <name>Export UI</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
