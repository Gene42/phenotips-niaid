<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/
-->

<xwikidoc version="1.1">
  <web>PhenoTips</web>
  <name>ProjectSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1401822196000</creationDate>
  <parent>PhenoTips.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1444246240000</date>
  <contentUpdateDate>1444243757000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
$xwiki.ssfx.use('uicomponents/suggest/suggestPicker.css', true)
$xwiki.jsfx.use('uicomponents/suggest/suggestPicker.js', true)
$xwiki.ssfx.use('uicomponents/widgets/userpicker/userPicker.css', true)
$xwiki.jsfx.use('uicomponents/widgets/userpicker/userPicker.js', true)
$xwiki.ssx.use('PhenoTips.ProjectSheet')
$xwiki.jsx.use('PhenoTips.ProjectSheet')
$xwiki.jsx.use('PhenoTips.Widgets')
{{/velocity}}
{{velocity}}
##
## General project attributes
##
#if ($xcontext.action == 'edit')
(% class="xform" %)(((
; {{html}}&lt;label&gt;$services.localization.render('phenotips.projectSheet.projectName')&lt;/label&gt;{{/html}}
: (% class="xHint" %)$services.localization.render('phenotips.projectSheet.projectName.hint')
: {{html}}&lt;input type="text" name="title" value="$!doc.title"/&gt;{{/html}}
; {{html}}&lt;label&gt;$services.localization.render('phenotips.projectSheet.projectDescription')&lt;/label&gt;{{/html}}
: (% class="xHint" %)$services.localization.render('phenotips.projectSheet.projectDescription.hint')
: {{html wiki="false" clean="false"}}&lt;textarea name="content" rows="20" cols="80"&gt;$!escapetool.html($doc.content)&lt;/textarea&gt;{{/html}}

$doc.display('openProjectForViewing') {{html}}&lt;label&gt;$services.localization.render('phenotips.projectSheet.openProjectForViewing')&lt;/label&gt;{{/html}}
$doc.display('openProjectForContribution') {{html}}&lt;label&gt;$services.localization.render('phenotips.projectSheet.openProjectForContribution')&lt;/label&gt;{{/html}}

##
## Contributors section
##
; {{html}}&lt;label&gt;$services.localization.render('phenotips.projectSheet.contributors')&lt;/label&gt;{{/html}}
: (% class="xHint" %)$services.localization.render('phenotips.projectSheet.contributorsHint')
: {{html clean="false"}}
&lt;div id="contributors-div"/&gt;
&lt;input type="text" name="user" class="suggestUsers" value="" placeholder="$services.localization.render('phenotips.patientAccessRightsManagement.newCollaborator')" id="new-contributors-user-input"/&gt;
&lt;input type="text" name="group" class="suggestGroups" value="" placeholder="$services.localization.render('phenotips.patientAccessRightsManagement.newGroupCollaborator')" id="new-contributors-group-input"&gt;
&lt;/fieldset&gt;
{{/html}}

##
## Leaders section
##
; {{html}}&lt;label&gt;$services.localization.render('phenotips.projectSheet.leaders')&lt;/label&gt;{{/html}}
: (% class="xHint" %)$services.localization.render('phenotips.projectSheet.leadersHint')
: {{html clean="false"}}
&lt;div id="leaders-div"/&gt;
&lt;input type="text" name="user" class="suggestUsers" value="" placeholder="$services.localization.render('phenotips.patientAccessRightsManagement.newCollaborator')" id="new-leaders-user-input"/&gt;
&lt;input type="text" name="group" class="suggestGroups" value="" placeholder="$services.localization.render('phenotips.patientAccessRightsManagement.newGroupCollaborator')" id="new-leaders-group-input"&gt;
{{/html}}

##
## Templates section
##
; {{html}}&lt;label&gt;$services.localization.render('phenotips.projectSheet.templates')&lt;/label&gt;{{/html}}
: (% class="xHint" %)$services.localization.render('phenotips.projectSheet.templatesHint')
{{html clean="false"}}
&lt;table id="templatesTable"&gt;
   &lt;tfoot&gt;
      &lt;td colspan="2"&gt;
      &lt;input type="text" id="suggestTemplates" placeholder="$services.localization.render('phenotips.projectSheet.templatesPlaceHolder')"/&gt;
      &lt;/td&gt;
   &lt;/tfoot&gt;
   &lt;tbody id="templatesList"/&gt;
&lt;/table&gt;
{{/html}}
)))
#else
$!doc.content
#end
{{/velocity}}</content>
  <object>
    <name>PhenoTips.ProjectSheet</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>8362a87c-e5e5-49f9-9ebb-f2a113856594</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>var PhenoTips = (function (PhenoTips) {
  var widgets = PhenoTips.widgets = PhenoTips.widgets || {};
  widgets.ProjectSheet = Class.create({

    initialize : function (projectId) {
      _this = this;
      _this.projectId = projectId;
      _this.form = $('inline');
      _this.ajaxService = '/bin/get/Projects/SaveProjectHandler';

      $('PhenoTips.ProjectClass_0_openProjectForContribution').observe('click', function() {
         _this._openForContributionCheckboxClicked();
      });
      _this._openForContributionCheckboxClicked();

      _this.contributorsTable = _this._initUsersGroupsSuggestion('contributors');
      _this._leadersTable= _this._initUsersGroupsSuggestion('leaders');

      this._readCollaboratorsAndTemplates();
      this._initializeSuggestTemplates();

      // Save collaborators and templates when project is saved
      document.observe("xwiki:actions:save", function(event) {
        var formData = _this.form.serialize(true);
        var contributors = formData.contributors || [];
        var leaders = formData.leaders || [];
        var templates = formData.templates || [];
        new Ajax.Request(_this.ajaxService, {
          parameters : {'projectId'    : _this.projectId,
                        'xaction'      : 'update',
                        'contributors' : contributors,
                        'leaders'      : leaders,
                        'templates'    : templates},
          onComplete: function(response) {
             _this._readCollaboratorsAndTemplates();
          }
        });
      });
    },

    _initializeSuggestTemplates: function() {
      var suggestTemplates = $('suggestTemplates');
      suggestTemplates._suggest = new PhenoTips.widgets.Suggest(suggestTemplates, {
        script: "$xwiki.getURL('Studies.StudiesSearch', 'get', 'outputSyntax=plain')" + "&amp;",
        varname: "input",
        noresults: "No matching terms",
        resultsParameter: "matchedStudies",
        json: true,
        resultId: "id",
        resultValue: "textSummary",
        enableHierarchy: false,
        fadeOnClear: false,
        timeout: 30000,
        parentContainer: $('body')
      });

      suggestTemplates.observe("focus", function (event) {
        Form.Element.clear(suggestTemplates);
      });

      suggestTemplates.observe("ms:suggest:selected", function (event) {
        _this._addTemplate(event.memo, true);
      });

    },

    _openForContributionCheckboxClicked : function() {
       _this.openForContribution = $('PhenoTips.ProjectClass_0_openProjectForContribution').checked;
       $('contributors-div').select('[type=text]').map(function(item) {
          item.disabled=_this.openForContribution;
       });
    },

    _initUsersGroupsSuggestion : function (fieldName) {
      var table = new Element('table', {id : fieldName, 'class' : 'usersGroupsTable'});
      // Body: collaborators
      var collaboratorsList = new Element('tbody', {'id': fieldName+'List'});
      // Foot: input for adding a new collaborator
      var newCollaborator = new Element('tfoot');
      var newUserInput = $('new-' + fieldName + '-user-input');
      var newGroupInput = $('new-' + fieldName + '-group-input');
      newCollaborator.insert(new Element('td', {'colspan' : 4}).insert(newUserInput).insert('&lt;br/&gt;').insert(newGroupInput));
      // Add the two sections
      $(fieldName + '-div').insert(table.insert(newCollaborator).insert(collaboratorsList));
      // Capture selection events
      newCollaborator.select('input').invoke('observe', 'xwiki:suggest:selected', function(event) {
         if (event.memo) {
           var id = event.memo.value;
           var existingCollaborator = collaboratorsList.down('tr input[value="' + id.replace('"', '\\"') + '"]');
           if (existingCollaborator) {
             existingCollaborator.up('tr').addClassName('highlight');
             // remove highlight after a while
             new PeriodicalExecuter(function(pe) {
                existingCollaborator.up('tr').removeClassName('highlight');
                pe.stop();
             }, 5);
           } else {
             var name = event.memo.info;
             var type = event.findElement('input').name;
             var newCollaborator = {'id' : id , 'name' : name , 'type' : type};
             _this._addCollaborator(newCollaborator, true, fieldName);
             event.findElement().value = '';
           }
         }
      });
      return collaboratorsList;
    },

    _addTemplate : function (template, highlight) {
      var row = new Element('tr', {'class' : (highlight === true ? 'new' : '')});
      row.insert(new Element('td').insert(template.value)
              .insert(new Element('input', {'type': 'hidden', 'name' : 'templates', 'value' : template.id}))
      )
      var deleteTool = new Element('span', {'class' : 'tool delete fa fa-times'});
      row.insert(deleteTool.wrap('td'));
      deleteTool.observe('click', function(event) {
         event.findElement('tr').remove();
      });
      $('templatesList').insert(row);
    },

    _addCollaborator : function (c, highlight, collaboratorType) {
      var row = new Element('tr', {'class' : (highlight === true ? 'new' : '')});
      row.insert(new Element('td').insert(new Element('span', {'class' : 'fa fa-' + c.type}).update(' ')));
      row.insert(new Element('td')
              .insert(c.name)
              .insert(new Element('input', {'type': 'hidden', 'name' : collaboratorType, 'value' : c.id}))
      )
      var deleteTool = new Element('span', {'class' : 'tool delete fa fa-times'});
      row.insert(deleteTool.wrap('td'));
      deleteTool.observe('click', function(event) {
         if (_this.openForContribution) { //contributors-div is disabled
            return;
         }
         event.findElement('tr').remove();
      });
      $(collaboratorType + 'List').insert(row);
    },

    _loadCollaboratorsAndTemplates : function(contributors, leaders, templates) {
      _this.contributorsTable.update('');
      _this._leadersTable.update('');

      for (var i = 0; i &lt; contributors.length ; i++) {
        this._addCollaborator(contributors[i], false, 'contributors');
      }
      for (var i = 0; i &lt; leaders.length ; i++) {
        this._addCollaborator(leaders[i], false, 'leaders');
      }

      $('templatesList').update('');
      for (var i = 0; i &lt; templates.length ; i++) {
        this._addTemplate(templates[i], false);
      }
    },

    _readCollaboratorsAndTemplates : function() {
      new Ajax.Request(_this.ajaxService, {
        parameters : {'xaction'   : 'get',
                      'projectId' : _this.projectId},
        onSuccess : function(response) {
           var contributors = response.responseJSON.contributors;
           var leaders = response.responseJSON.leaders;
           var templates = response.responseJSON.templates;
           _this._loadCollaboratorsAndTemplates(contributors, leaders, templates);
        }
      });
    }

  });
  return PhenoTips;
})(PhenoTips || {});


document.observe("xwiki:dom:loaded", function () {
   new PhenoTips.widgets.ProjectSheet(document.documentElement.down('meta[name="page"]').content);
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>PhenoTips.ProjectSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>615ece93-e9ae-4b28-bf12-bf6f9f6a4139</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#template("colorThemeInit.vm")

.accepted-suggestions {
display: none;
}

.usersGroupsTable tbody td, #templatesTable tbody td {
  border-bottom: 1px solid $theme.borderColor;
}
.usersGroupsTable tfoot td, #templatesTable tfoot td {
  border-top: 3px solid $theme.borderColor;
}
.usersGroupsTable .tool.delete, #templatesTable .tool.delete {
  color: $theme.notificationErrorColor;
  cursor: pointer;
  width: 32px;
}
.usersGroupsTable .highlight, #templatesTable .highlight {
  background-color: $theme.highlightColor !important;
  color: $theme.notificationErrorColor;
}

.usersGroupsTable .new, #templatesTable .new {
  background-color: $theme.highlightColor;
}

#templatesTable {
   width: 183px;
   font-size: 14px;
}
</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
