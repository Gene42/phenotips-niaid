<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/
-->

<xwikidoc version="1.1">
  <web>PhenoTips</web>
  <name>OmimPredictService</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1401822196000</creationDate>
  <parent>PhenoTips.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1401822196000</date>
  <contentUpdateDate>1401822196000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity filter="indent"}}
#if ($xcontext.action == 'get')
  $response.setHeader("X-ReqNo", "$!request.reqNo")##
  #if ("$!request.q" != '')##
    #set ($_service = $services.omim)
    #set ($limit = $mathtool.toInteger("$!{request.limit}"))
    #if (!$limit || $limit &lt; 0)
      #set ($limit = 20)
    #end
    #set ($data = [])
    #set ($ancestors = $collectionstool.set)
    #set ($negativeAncestors = $collectionstool.set)
    #foreach ($piece in $!request.getParameterValues('symptom'))
      #set ($discard = $data.add("symptom:${piece.replaceAll(':', '\\:')}"))
      #set ($discard = $ancestors.addAll($services.vocabularies.resolveTerm($piece).get('term_category')))
    #end
    #foreach ($piece in $!request.getParameterValues('not_symptom'))
      #set ($discard = $data.add("not_symptom:${piece.replaceAll(':', '\\:')}"))
      #set ($discard = $negativeAncestors.addAll($services.vocabularies.resolveTerm($piece).get('term_category')))
    #end
    #set ($discard = $negativeAncestors.removeAll($ancestors))
    #if ($!request.getParameterValues('not_symptom'))
      #set ($discard = $negativeAncestors.removeAll($!request.getParameterValues('not_symptom')))
    #end
    #if ($!request.getParameterValues('symptom'))
      #set ($discard = $ancestors.removeAll($!request.getParameterValues('symptom')))
    #end
    #foreach ($piece in $ancestors)
      #set ($discard = $data.add("symptom:${piece.replaceAll(':', '\\:')}^0.3"))
    #end
    #foreach ($piece in $negativeAncestors)
      #set ($discard = $data.add("not_symptom:${piece.replaceAll(':', '\\:')}^0.3"))
    #end
    #foreach ($piece in $!request.getParameterValues('free_symptom'))
      #set($discard = $data.add("text:""${piece}"""))
    #end
    #set ($discard = $data.add('-nameSort:\** -nameSort:\+* -nameSort:\^*'))
    #if ("$!{request.format}" == 'html')
#set ($results = $_service.search($stringtool.join($data, ' '), $limit, 0))
#if ($results.size() &gt; 0)
{{html clean="false"  wiki="false"}}##
&lt;ul&gt;
#foreach($item in $results)
    #if ("$!item.id"!= '' &amp;&amp; "$!item.name" != '')
    #set ($indexOfSeparator = $item.name.indexOf(';'))
    #if ($indexOfSeparator &gt; 0)
      #set($shortName = $item.name.substring(0, $indexOfSeparator))
      #set($fullName = $item.name.replaceAll(';;', ';'))
    #else
      #set($shortName = $item.name)
      #set($fullName = $item.name)
    #end
  &lt;li class="disorder"&gt;
    &lt;span class="id hidden" title="${item.id}"&gt;[MIM:#if("$!item.Oid"!= '')${item.Oid}#else${item.id}#end]&lt;/span&gt;
    &lt;span class="title" title="${fullName}"&gt;${shortName}&lt;/span&gt;
    #if ("$!item.Locus" != '')&lt;span class="locus"&gt;(Locus: ${item.Locus})&lt;/span&gt;#end
  &lt;/li&gt;
  #end
#end## foreach item
&lt;/ul&gt;
{{/html}}
   #set ($hasOutput = true)
#else
   #set ($hasOutput = false)
#end## results.size() &gt; 0
    #end## html format
  #else
    #set ($hasOutput = false)
  #end## non-empty query
#end## get action
##
#if (!$hasOutput)
(% class="hint" %)$services.localization.render('phenotips.solrAccessService.noMatches')
#end
{{/velocity}}</content>
</xwikidoc>
