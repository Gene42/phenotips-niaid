<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/
-->

<xwikidoc version="1.1">
  <web>PhenoTips</web>
  <name>StudyBindingClass</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1401822126000</creationDate>
  <parent>PhenoTips.StudyClass</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1442523313000</date>
  <contentUpdateDate>1442523313000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output=false}}
#if ("$!mode" == '' || "$!mode" == 'get')
  #set ($mode = 'edit')
#end
#if ("$!name" == '')
  #set ($name = 'studyReference')
#end
#if ("$!prefix" == '')
  #set ($prefix = 'PhenoTips.StudyBindingClass_')
#end
#if ("$!value" == '')
  #set ($value = '')
#end
{{/velocity}}

{{velocity}}{{html clean="false" wiki="true"}}
#if ($mode == 'edit')
#set ($studiesVisibilityPreference = $xwiki.getDocument('XWiki.XWikiPreferences').getObject('XWiki.ConfigurationClass', 'property', 'study-visibility-option', false).getProperty('value').value)
#if ($studiesVisibilityPreference == 'unrestricted')
  #set ($studyClassName = 'PhenoTips.StudyClass')
  #set ($studyTemplateName = 'PhenoTips.StudyTemplate')
  #set ($query = $services.query.xwql("from doc.object(${studyClassName}) as std where doc.fullName &lt;&gt; :template").bindValue('template', $studyTemplateName))
  #set ($studyDocs = $xwiki.wrapDocs($query.execute()))
  #set ($studies = $collectionstool.sortedSet)
  #foreach ($study in $studyDocs)
    #set ($discard = $studies.add($services.model.serialize($study.documentReference, 'default')))
  #end
#else
  #set ($toProcess = $collectionstool.queue)
  #set ($discard = $toProcess.add($xcontext.userReference.toString()))
  #set ($groups = [])
  #set ($studies = $collectionstool.sortedSet)
  #foreach ($iteration in [0..1000])
    #if ($toProcess.empty)
      #break
    #end
    #set ($item = $toProcess.poll())
    #foreach ($group in $xwiki.wrapDocs($xwiki.rightsmanager.getAllGroupsNamesForMember($item)))
      #set ($groupObj = $group.getObject('PhenoTips.PhenoTipsGroupClass'))
      #if (!$groupObj &amp;&amp; $group.documentReference.name.endsWith(' Administrators'))
        #set ($groupObj = $xwiki.getDocument($services.model.resolveDocument($stringtool.removeEnd($group.documentReference.name, ' Administrators'), $group.documentReference.parent)).getObject('PhenoTips.PhenoTipsGroupClass'))
      #end
      #if ($groupObj &amp;&amp; !$groups.contains($group.documentReference.toString()))
        #set ($discard = $toProcess.add($group.documentReference.toString()))
        #set ($discard = $groups.add($escapetool.sql($group.documentReference.toString())))
        #if ($groupObj.getProperty('studies').value.isEmpty() == false)
          #set ($discard = $studies.addAll($groupObj.getProperty('studies').value))
        #end
      #end
    #end
  #end
#end
&lt;div class="form-template-option"&gt;
&lt;select&gt;
&lt;option name="${prefix}${name}" value="" /&gt;$services.localization.render('phenotips.studyBindingClass.noStudyOption')&lt;/option&gt;
&lt;/div&gt;
#foreach ($sName in $studies)
    #set ($s = $xwiki.getDocument($sName))
    #set ($config = $s.getObject('PhenoTips.StudyClass'))
    #set ($configTitle = '')
    #if ("$!{s.plainTitle}" != '')
      #set ($configTitle = "$s.plainTitle")
    #else
      #set ($configTitle = "${s.name}")
    #end
    &lt;div class="form-template-option"&gt;
    &lt;option name="${prefix}${name}" value="${s.documentReference}" /&gt;$configTitle&lt;/option&gt;
    &lt;/div&gt;
#end
&lt;/select&gt;
#else
  #if ("$!value" == '')
    None
  #else
    #set ($s = $xwiki.getDocument($value))
    #set ($config = $s.getObject('PhenoTips.StudyClass'))
    #set ($configTitle = '')
    #if ("$!{s.plainTitle}" != '')
      #set ($configTitle = "$s.plainTitle")
    #else
      #set ($configTitle = "${s.name}")
    #end
    [[${configTitle}&gt;&gt;${value}]]
  #end
#end
{{/html}}{{/velocity}}
</content>
  <class>
    <name>PhenoTips.StudyBindingClass</name>
    <customClass/>
    <customMapping/>
    <defaultViewSheet/>
    <defaultEditSheet/>
    <defaultWeb/>
    <nameField/>
    <validationScript/>
    <studyReference>
      <cache>0</cache>
      <classname/>
      <customDisplay>{{include reference="PhenoTips.StudyBindingClass" /}}</customDisplay>
      <disabled>0</disabled>
      <displayType>select</displayType>
      <idField/>
      <multiSelect>0</multiSelect>
      <name>studyReference</name>
      <number>1</number>
      <picker>0</picker>
      <prettyName>Configuration to use</prettyName>
      <relationalStorage>0</relationalStorage>
      <separator> </separator>
      <separators/>
      <size>1</size>
      <sort>none</sort>
      <sql/>
      <unmodifiable>0</unmodifiable>
      <validationMessage/>
      <validationRegExp/>
      <valueField/>
      <classType>com.xpn.xwiki.objects.classes.DBListClass</classType>
    </studyReference>
  </class>
  <object>
    <name>PhenoTips.StudyBindingClass</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>29beb1b4-dff9-4c8e-90f4-fc31834bd208</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>document.observe("xwiki:dom:loaded", function(event) {
   var newPatientForm = $('patient-creation-form');
   if (!newPatientForm || !newPatientForm.down('input[name="sheet"]')) {
     return;
   }
   var sheetElt = newPatientForm.down('input[name="sheet"]');
   var sheet = sheetElt.value;
   var documentReference = XWiki.resource.get(sheet, XWiki.EntityType.DOCUMENT);

   var templateSelectionContainer = new Element('div');
   var templateSelectionForm = new Element('form', {'action' : newPatientForm.action, 'class' : 'xform'});
   var formDataWrapper = new Element('div');
   templateSelectionForm.insert(formDataWrapper);
   newPatientForm.select('input[type="hidden"]').each(function(item) {
     if (item.name != 'sheet') {
         formDataWrapper.insert(new Element('input', {type : item.type, name: item.name, value: item.value}));
     }
   });
   formDataWrapper.insert(templateSelectionContainer);
   var submitButton = new Element('input', {type : 'submit', value : "$services.localization.render('phenotips.studyBindingClass.createButton')", 'class' : 'button'});
   formDataWrapper.insert(submitButton);
   var cancelButton = new Element('input', {type : 'button', value : "$services.localization.render('phenotips.studyBindingClass.cancelButton')", 'class' : 'button secondary'});
   formDataWrapper.insert(' ').insert(cancelButton);
   var modalBox = new PhenoTips.widgets.ModalPopup(templateSelectionForm, false, {'title': "$services.localization.render('phenotips.studyBindingClass.popupTitle')", 'verticalPosition': 'top', 'removeOnClose': false});
   cancelButton.observe('click', function(event) {
     modalBox.closeDialog();
   });

   newPatientForm.observe('submit', function (event) {
     event.stop();
     new Ajax.Request(new XWiki.Document(documentReference.name, documentReference.space).getURL('get'), {
        onCreate : function() {
          templateSelectionContainer.update('&lt;img src="$xwiki.getSkinFile('icons/xwiki/ajax-loader-large.gif')"/&gt;');
          modalBox.showDialog();
        },
        onSuccess : function(response) {
           templateSelectionContainer.update(response.responseText);
        },
        onFailure : function(response) {
          var failureReason = response.responseText || response.statusText;
          if (response.statusText == '' /* No response */ || response.status == 12031 /* In IE */) {
             failureReason = "$services.localization.render('phenotips.studyBindingClass.failure.noResponse')";
          }
          _this._messages.update(new Element('div', {'class' : 'errormessage'}).update("$services.localization.render('phenotips.studyBindingClass.failureMessage')" + ' ' + failureReason));
        },
        on0 : function (response) {
          response.request.options.onFailure(response);
        }
     });
   });
});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>PhenoTips.StudyBindingClass</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>de3434cb-e595-42cf-b861-4e383d4f4680</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>document.observe("xwiki:dom:update_studies", function(event) {
   selected = "";
   if (event.memo) {
      selected = event.memo.selected;
   }

   new Ajax.Request('/bin/get/Projects/getStudiesForProjects', {
      parameters : {'xaction'  : 'get',
                    'projects' : selected},
      onCreate : function() {
       //  this.fld.addClassName("loading");
      },
      onSuccess : function(response) {
//           templateSelectionContainer.update(response.responseText);
          var i =1;
          i = 2;
      },
      onFailure : function(response) {
    //     var failureReason = response.responseText || response.statusText;
    //      if (response.statusText == '' /* No response */ || response.status == 12031 /* In IE */) {
    //         failureReason = "$services.localization.render('phenotips.studyBindingClass.failure.noResponse')";
    //      }
    //      _this._messages.update(new Element('div', {'class' : 'errormessage'}).update("$services.localization.render('phenotips.studyBindingClass.failureMessage')" + ' ' + failureReason));
       },
        on0 : function (response) {
     //     response.request.options.onFailure(response);
        },
       onComplete : function () {
     //       this.fld.removeClassName("loading");

       }
     });

});

//document.observe("xwiki:dom:loaded", function(event) {
//   var studyAssignmentTool = $('study-assignment-config');
//   if (!studyAssignmentTool) {
//     return;
//   }
//   var templateSelectionContainer = new Element('div');
//   var templateSelectionForm = new Element('form', {'action' : studyAssignmentTool.down('input').value, 'class' : 'xform', 'method': 'post'});
//   var formDataWrapper = new Element('div');
//   templateSelectionForm.insert(formDataWrapper);
//   formDataWrapper.insert(templateSelectionContainer);
//   var submitButton = new Element('input', {type : 'submit', value : "$services.localization.render('phenotips.studyBindingClass.saveButton')", 'class' : 'button'});
//   formDataWrapper.insert(submitButton);
//   var cancelButton = new Element('input', {type : 'button', value : "$services.localization.render('phenotips.studyBindingClass.cancelButton')", 'class' : 'button secondary'});
//   formDataWrapper.insert(' ').insert(cancelButton);
//   var modalBox = new PhenoTips.widgets.ModalPopup(templateSelectionForm, false, {'title': "$services.localization.render('phenotips.studyBindingClass.popupTitle')", 'verticalPosition': 'top', 'removeOnClose': false});
//   cancelButton.observe('click', function(event) {
//     modalBox.closeDialog();
//   });
//   submitButton.observe('click', function(event) {
//     if (studyAssignmentTool.hasClassName('edit')) {
//       //if in edit mode, save form first, then submit
//       event.stop();
//       var form = event.findElement('form');
//       document.fire('xwiki:actions:save', {'continue' : true, 'form' : studyAssignmentTool.up('form')});
//       document.observe('xwiki:document:saved', function () {
//          form.submit();
//       });
//     }
//   });
//
//   studyAssignmentTool.observe('click', function (event) {
//     event.stop();
//     new Ajax.Request(studyAssignmentTool.href, {
//        onCreate : function() {
//          templateSelectionContainer.update('&lt;img src="$xwiki.getSkinFile('icons/xwiki/ajax-loader-large.gif')"/&gt;');
//          modalBox.showDialog();
//        },
//        onSuccess : function(response) {
//           templateSelectionContainer.update(response.responseText);
//        },
//        onFailure : function(response) {
//          var failureReason = response.responseText || response.statusText;
//          if (response.statusText == '' /* No response */ || response.status == 12031 /* In IE */) {
//             failureReason = "$services.localization.render('phenotips.studyBindingClass.failure.noResponse')";
//          }
//          _this._messages.update(new Element('div', {'class' : 'errormessage'}).update("$services.localization.render('phenotips.studyBindingClass.failureMessage')" + ' ' + failureReason));
//       },
//        on0 : function (response) {
//          response.request.options.onFailure(response);
//        }
//     });
//   });
//});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>PhenoTips.StudyBindingClass</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>89109749-5cca-4849-86c0-376b29afa531</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>.xform .form-template-option {
  margin: 1em 0;
}
.xform .form-template-option label input[type="select"]  {
  vertical-align: middle;
}
.study-assignment-config {
  width: 48%;
  float: left;
}
.study-assignment-config a.button {
  cursor: text;
  font-size: 1em;
  font-weight: normal;
  text-transform: none;
}

</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>PhenoTips.StudyBindingClass</name>
    <number>0</number>
    <className>XWiki.UIExtensionClass</className>
    <guid>3dc9eb76-22a3-4007-8454-9fead6580288</guid>
    <class>
      <name>XWiki.UIExtensionClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <content>
        <disabled>0</disabled>
        <name>content</name>
        <number>3</number>
        <prettyName>Extension Content</prettyName>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </content>
      <extensionPointId>
        <disabled>0</disabled>
        <name>extensionPointId</name>
        <number>1</number>
        <prettyName>Extension Point ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </extensionPointId>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>2</number>
        <prettyName>Extension ID</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parameters>
        <disabled>0</disabled>
        <name>parameters</name>
        <number>4</number>
        <prettyName>Extension Parameters</prettyName>
        <rows>10</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </parameters>
      <scope>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>scope</name>
        <number>5</number>
        <prettyName>Extension Scope</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>wiki=Current Wiki|user=Current User|global=Global</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </scope>
    </class>
    <property>
      <content>{{velocity}}
#if ($xcontext.action == 'export')
  #break
#end
#set ($sheetName = 'PhenoTips.StudyBindingSheet')
#set ($className = 'PhenoTips.StudyBindingClass')
$xwiki.jsx.use('PhenoTips.Widgets')##
$xwiki.jsx.use($className)##
$xwiki.ssx.use($className)##
#set ($studiesVisibilityPreference = $xwiki.getDocument('XWiki.XWikiPreferences').getObject('XWiki.ConfigurationClass', 'property', 'study-visibility-option', false).getProperty('value').value)
#if ($studiesVisibilityPreference == 'unrestricted')
  #set ($studyClassName = 'PhenoTips.StudyClass')
  #set ($studyTemplateName = 'PhenoTips.StudyTemplate')
  #set ($query = $services.query.xwql("from doc.object(${studyClassName}) as std where doc.fullName &lt;&gt; :template").bindValue('template', $studyTemplateName))
  #set ($studyDocs = $xwiki.wrapDocs($query.execute()))
  #set ($studies = $collectionstool.sortedSet)
  #foreach ($study in $studyDocs)
    #set ($discard = $studies.add($services.model.serialize($study.documentReference, 'default')))
  #end
#else
  #set ($toProcess = $collectionstool.queue)
  #set ($discard = $toProcess.add($xcontext.userReference.toString()))
  #set ($groups = [])
  #set ($studies = $collectionstool.sortedSet)
  #foreach ($iteration in [0..1000])
    #if ($toProcess.empty)
      #break
    #end
    #set ($item = $toProcess.poll())
    #foreach ($group in $xwiki.wrapDocs($xwiki.rightsmanager.getAllGroupsNamesForMember($item)))
      #set ($groupObj = $group.getObject('PhenoTips.PhenoTipsGroupClass'))
      #if (!$groupObj &amp;&amp; $group.documentReference.name.endsWith(' Administrators'))
        #set ($groupObj = $xwiki.getDocument($services.model.resolveDocument($stringtool.removeEnd($group.documentReference.name, ' Administrators'), $group.documentReference.parent)).getObject('PhenoTips.PhenoTipsGroupClass'))
      #end
      #if ($groupObj &amp;&amp; !$groups.contains($group.documentReference.toString()))
        #set ($discard = $toProcess.add($group.documentReference.toString()))
        #set ($discard = $groups.add($escapetool.sql($group.documentReference.toString())))
        #if ($groupObj.getProperty('studies').value.isEmpty() == false)
          #set ($discard = $studies.addAll($groupObj.getProperty('studies').value))
        #end
      #end
    #end
  #end
#end
#if ($studies.size() &gt; 0)
  #set ($studyConfig = $doc.getObject($className, true))
  #set ($value = $studyConfig.getProperty('studyReference').value)
  #if ("$!value" == '')
    #set($displayedValue = '(% class="hint" %)None(%%)')
  #else
    #set ($s = $xwiki.getDocument($value))
    #set ($config = $s.getObject('PhenoTips.StudyClass'))
    #set ($configTitle = '')
    #if ("$!{s.plainTitle}" != '')
      #set ($configTitle = "$s.plainTitle")
    #else
      #set ($configTitle = "${s.name}")
    #end
    #set($displayedValue = "(% class='buttonwrapper' %)[[{{icon name='copy' /}} ${configTitle}&gt;&gt;${value}||rel='__blank' class='button secondary']]")
  #end
  #set ($faction = $doc.getURL('save', "form_token=${services.csrf.token}&amp;objectPolicy=updateOrCreate&amp;xredirect=$escapetool.url($doc.getURL($xcontext.action))"))
(% class="study-assignment-config" %)(((Study: $displayedValue (% class="buttonwrapper" %)[[ {{icon name="edit" title="$services.localization.render('phenotips.studyBindingClass.changeStudyButton.title')" /}} {{html clean=false}}&lt;input type="hidden" name="faction" value="$faction"/&gt;{{/html}}&gt;&gt;path:$doc.getURL('get', "sheet=$!{sheetName}&amp;faction=$!{escapetool.url($faction)}")||class="button" rel="__blank" id="study-assignment-config" class="$xcontext.action"]])))
#end
{{/velocity}}</content>
    </property>
    <property>
      <extensionPointId>org.phenotips.patientSheet.before</extensionPointId>
    </property>
    <property>
      <name>org.phenotips.patientSheet.study</name>
    </property>
    <property>
      <parameters/>
    </property>
    <property>
      <scope>wiki</scope>
    </property>
  </object>
</xwikidoc>
