<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/
-->

<xwikidoc version="1.1">
  <web>PhenoTips</web>
  <name>StudyCases</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1401822210000</creationDate>
  <parent>PhenoTips.StudySheet</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1401822210000</date>
  <contentUpdateDate>1401822210000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="PhenoTips.DatabaseFilters" /}}

{{velocity}}
$xwiki.ssfx.use('uicomponents/suggest/suggestPicker.css', true)##
$xwiki.jsfx.use('uicomponents/suggest/suggestPicker.js', true)##
$xwiki.ssfx.use('uicomponents/widgets/userpicker/userPicker.css', true)##
$xwiki.jsfx.use('uicomponents/widgets/userpicker/userPicker.js', true)##
$xwiki.ssx.use('PhenoTips.DatabaseFilters')##
$xwiki.ssx.use('PhenoTips.Skin', {'colorTheme' : "$xwiki.getSpacePreference('colorTheme')"})##
$xwiki.jsx.use('PhenoTips.DBWebHomeSheet')##
$xwiki.ssx.use('PhenoTips.DBWebHomeSheet')##
$xwiki.ssx.use('PhenoTips.Widgets')##
$xwiki.jsx.use('PhenoTips.Widgets')##
$xwiki.jsx.use('XWiki.DateTimePicker')##
$xwiki.ssx.use('XWiki.DateTimePicker')##
#set ($config = $xwiki.getDocument('data.WebHome').getObject('PhenoTips.DBConfigurationClass'))
#set ($patientClassName = 'PhenoTips.PatientClass')
#if ($config)
#set ($configuredColumns = $config.getProperty('livetableColumns').value)
#if (!$configuredColumns &amp;&amp; !($configuredColumns.length &gt; 0))
  #set ($configuredColumns = 'doc.name')
#end
#set ($columns = [])
#set ($discard = $columns.addAll($configuredColumns))
#set ($columnsProperties = {
  '_actions' : {'actions': ['edit', 'delete']}
})
#foreach ($column in $columns)
  #set ($isFilterable = ($column.toLowerCase().indexOf('date') &lt; 0) &amp;&amp; ($column != 'doc.creator') &amp;&amp; ($column != 'doc.author'))
  #set ($discard = $columnsProperties.put($column, { 'type' : 'text', 'link' : 'view', 'size' : 7, 'filterable' : $isFilterable, 'sortable': true }))
#end
##  toggle-filters
#set ($topFilters = $doc.getRenderedContent("(% class='xform' %)((( {{html clean='false'}}&lt;span class='buttonwrapper'&gt;&lt;a class='button toggle-filters' href='#'&gt;$services.localization.render('phenotips.studyCases.advanceDataFiltersButton')&lt;/a&gt;&lt;/span&gt;{{/html}}
{{velocity}}#__filters_display('xform'){{/velocity}})))", "xwiki/2.1"))
#set ($discard = $columns.add('_actions'))
##
#set ($filterFrom = ", BaseObject studyBindingObj, StringProperty study")
#set ($filterWhere = "and studyBindingObj.name = doc.fullName and studyBindingObj.className = 'PhenoTips.StudyBindingClass' and study.id.id = studyBindingObj.id and study.value = '${escapetool.sql($doc.documentReference)}'")
#if ($isGuest)
  #set ($filterWhere = "${filterWhere} and doc.creator = 'XWiki.XWikiGuest' and not exists (from BaseObject accessObj where accessObj.name = doc.fullName and accessObj.className = 'PhenoTips.OwnerClass')")
#elseif (!$hasAdmin)
  #set ($groups = [])
  #set ($toProcess = $collectionstool.queue)
  #if ($xcontext.userReference)
    #set ($discard = $groups.add($xcontext.userReference))
    #set ($discard = $toProcess.add($xcontext.userReference.toString()))
  #end
  #foreach ($iteration in [0..1000])
    #if ($toProcess.empty)
      #break
    #end
    #set ($item = $toProcess.poll())
    #foreach ($group in $xwiki.wrapDocs($xwiki.rightsmanager.getAllGroupsNamesForMember($item)))
      #set ($groupObj = $group.getObject('PhenoTips.PhenoTipsGroupClass'))
      #if (!$groupObj &amp;&amp; $group.documentReference.name.endsWith(' Administrators'))
        #set ($group = $xwiki.getDocument($services.model.resolveDocument($stringtool.removeEnd($group.documentReference.name, ' Administrators'), $group.documentReference.parent)))
        #set ($groupObj = $group.getObject('PhenoTips.PhenoTipsGroupClass'))
      #end
      #if ($groupObj &amp;&amp; !$groups.contains($group.documentReference.toString()))
        #set ($discard = $toProcess.add($group.documentReference.toString()))
        #set ($discard = $groups.add($escapetool.sql($group.documentReference.toString())))
      #end
    #end
  #end
  #set ($groups = "('${stringtool.join($groups, ""','"")}')")
  #set ($o = $services.model.serialize($xcontext.userReference, 'default'))
  #set ($os = $services.model.serialize($xcontext.userReference, 'compactwiki'))
  #set ($filterWhere = "${filterWhere} and ((doc.creator in ('${o}', '${os}') and not exists (from BaseObject own where own.className = 'PhenoTips.OwnerClass' and own.name = doc.fullName)) or exists (from BaseObject accessObj, StringProperty accessProp where accessObj.className in ('PhenoTips.OwnerClass', 'PhenoTips.CollaboratorClass') and accessObj.name = doc.fullName and accessProp.id.id = accessObj.id and accessProp.value in ${groups}) or exists (from BaseObject visibilityObj, StringProperty visibilityProp where visibilityObj.name = doc.fullName and visibilityObj.className = 'PhenoTips.VisibilityClass' and visibilityObj.id = visibilityProp.id.id and visibilityProp.id.name = 'visibility' and visibilityProp.value = 'public'))")
#end
#set ($options = {
  'className'         : $patientClassName,
  'translationPrefix' : 'patient.livetable.',
  'rowCount'          : 25,
  'maxPages'          : 10,
  'selectedColumn'    : $config.getProperty('livetableSortColumn').value,
  'defaultOrder'      : 'asc',
  'topFilters'        : $topFilters,
  'resultPage'        : 'PhenoTips.LiveTableResults',
  'extraParams'       : "&amp;filterFrom=${escapetool.url($filterFrom)}&amp;filterWhere=${escapetool.url($filterWhere)}"
})
#if ("$!config.getProperty('livetableRows').value" != '' &amp;&amp; $config.getProperty('livetableRows').value &gt; 0)
  #set ($options.rowCount = $config.getProperty('livetableRows').value)
#end
#livetable('patients' $columns $columnsProperties $options)
$xwiki.ssfx.use('js/xwiki/table/livetable.css', {'colorTheme' : "$xwiki.getSpacePreference('colorTheme')", 'forceSkinAction' : true})##
#else
{{warning}}**$services.localization.render('phenotips.configurationMissing')**{{/warning}}
#end
{{/velocity}}</content>
</xwikidoc>
