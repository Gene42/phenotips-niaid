<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/
-->

<xwikidoc version="1.1">
  <web>PhenoTips</web>
  <name>OmimInfoService</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1409255172000</creationDate>
  <parent>PhenoTips.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1409279361000</date>
  <contentUpdateDate>1409279361000</contentUpdateDate>
  <version>1.1</version>
  <title>OmimInfoService</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#if ($xcontext.action != 'get')
  **Usage**: //http[s]:~/~/&lt;hostname&gt;[:&lt;port&gt;]/&lt;appname&gt;/bin/get/PhenoTips/OmimInfoService?id=&lt;MIM number&gt;//
  Example: [[https://playground.phenotips.org/bin/get/PhenoTips/OmimInfoService?id=190685]]
  #break
#end
#if ("$!{request.outputSyntax}" == 'plain')
  {{content syntax="plain/1.0"}}
#else
  {{html wiki="false" clean="false"}}
#end
#if ("$!request.id" != '')
  #set ($term = $services.vocabularies.omim.getTerm($request.id))
#else
  $response.setStatus(400)##
  $response.setContentType('application/json')##
  $jsontool.serialize({"error" : "Disease id not provided."})
  #break
#end
#if (!$term)
  $response.setStatus(404)##
  $response.setContentType('application/json')##
  $jsontool.serialize({"error" : "Disease not found."})
  #break
#end

#set ($names = $term.name.split('\s*;;\s*'))
#set ($symptoms = [])
#foreach ($s in $term.actual_symptom)
  #set ($discard = $symptoms.add({'id' : $s, 'label' : $services.vocabularies.resolveTerm($s).name}))
#end
#set ($not_symptoms = [])
#foreach ($s in $term.actual_not_symptom)
  #set ($discard = $not_symptoms.add({'id' : $s, 'label' : $services.vocabularies.resolveTerm($s).name}))
#end

#set ($result = {
  'id' : "$!term.id",
  'label' : $names,
  'symptoms' : $symptoms,
  'not_symptoms' : $not_symptoms,
  'gene_reviews_link' : "$!term.get('gene_reviews_link')"
})
$response.setContentType('application/json')
$jsontool.serialize($result)
#if ("$!{request.outputSyntax}" == 'plain')
  {{/content}}
#else
  {{/html}}
#end
{{/velocity}}</content>
</xwikidoc>
