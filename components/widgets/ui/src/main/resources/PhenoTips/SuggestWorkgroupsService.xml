<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>PhenoTips</web>
  <name>SuggestWorkgroupsService</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1427252599000</creationDate>
  <parent>XWiki.SearchCode</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1427255451000</date>
  <contentUpdateDate>1427255428000</contentUpdateDate>
  <version>1.1</version>
  <title>Workgroup Suggestion Service</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#set ($input = "$!request.input.toLowerCase()")
#if ($input == '')
  #break
#end
#macro (suggestUsersOrGroups)
  #if ($input.length() &gt; 0)
    ## Resolve the input as a user/group reference and use only the document name for matching.
    #set ($input = $services.model.resolveDocument($input).name)
  #end
  #set ($statement = 'from doc.object(PhenoTips.PhenoTipsGroupClass) as groups where (lower(doc.name) like :input or lower(doc.title) like :input) and doc.fullName &lt;&gt; ''PhenoTips.PhenoTipsGroupTemplate'' order by doc.name')
  #set ($query = $services.query.xwql($statement).setWiki($wikiReference.name).addFilter('unique'))
  #set ($discard = $query.setOffset(0).setLimit(10).bindValue('input', "%${input}%"))
  #foreach ($result in $query.execute())
    #if ($xwiki.hasAccessLevel('view', $xcontext.user, $result))
      #displayResult($result)
    #end
  #end
#end

#macro (displayResult $result)
  #set ($reference = $services.model.resolveDocument($result, $wikiReference))
  ## Make sure we use relative references as much as possible. See XWIKI-10046.
  #set ($stringReference = $services.model.serialize($reference, 'compactwiki'))
  #getUserAvatarURL($reference $avatarURL 30)
  #set ($prettyName = $xwiki.getDocument($reference).plainTitle)
  #if ("$!prettyName" == '')
     #set ($prettyName = $reference.name)
  #end
  &lt;rs id="$escapetool.xml($reference.name)" icon="$escapetool.xml($avatarURL.url)" info="$prettyName"&gt;$escapetool.xml($stringReference)&lt;/rs&gt;
#end

$response.setContentType("text/xml")
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;results&gt;
#if ($request.wiki == 'global')
  #set ($wikiReference = $services.model.createWikiReference($xcontext.mainWikiName))
#else
  #set ($wikiReference = $doc.documentReference.wikiReference)
#end
#if ($request.exactMatch == 'true')
  ## This is normally used for loading the initial selection.
  #displayResult("$!request.input")
#else
  #suggestUsersOrGroups()
#end
&lt;/results&gt;
{{/velocity}}
</content>
</xwikidoc>
