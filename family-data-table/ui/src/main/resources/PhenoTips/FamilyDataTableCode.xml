<?xml version="1.0" encoding="UTF-8"?>

<!--
 * This file is subject to the terms and conditions defined in file LICENSE,
 * which is part of this source code package.
 *
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
-->

<xwikidoc version="1.1">
  <web>PhenoTips</web>
  <name>FamilyDataTableCode</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1478719472000</creationDate>
  <parent>PhenoTips.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1478725576000</date>
  <contentUpdateDate>1478719472000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content/>
  <object>
    <name>PhenoTips.FamilyDataTableCode</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>a04d151c-087a-415f-b54c-f02a1e002541</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>(function() {
  var familyGroupsDialog = new PhenoTips.widgets.ModalPopup("Family groups", 
    false, {'title': 'Family groups for this family', 'verticalPosition': 'top'});
  function init() {
    $$('.xwiki-livetable')[0].on('click', 'a.actiongroup', function(e) {
      e.preventDefault();
      var famId = e.target.up('tr').down('td.doc_name').textContent;
      familyGroupsDialog.show();
      $$('.msdialog-title')[0].innerHTML = "Family groups for this family: " + famId;

      new Ajax.Request(new XWiki.Document(famId, 'Families').getURL('edit', 'xpage=plain&amp;xaction=familygroupssection'), {
        onSuccess: function(transport) {
          var contentEl = new Element('div').update(transport.responseText);
          familyGroupsDialog.setContent(contentEl);
          document.fire('xwiki:dom:updated', {'elements': [contentEl]});
        },
        onFailure : function(response) {
          var failureReason = response.statusText;
          if (failureReason == '' || response.status == 12031) {
            failureReason = 'Server not responding'; 
          }
          familyGroupsDialog.setContent("Unable to retrieve data from server. Reason: " + failureReason);
        },
      });
    });
  }

  (XWiki.domIsLoaded &amp;&amp; init()) || document.observe("xwiki:dom:loaded", init);
})();</code>
    </property>
    <property>
      <name>Add family to family group</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>PhenoTips.FamilyDataTableCode</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>0d0643a3-8c35-45cc-a2c9-28ad64f3010c</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>var PhenoTips = (function(PhenoTips) {
  // Start PhenoTips augmentation
  var widgets = PhenoTips.widgets = PhenoTips.widgets || {};
  console.log("yob");

  widgets.LinkedAgeAndBirthYear = Class.create({
    initialize: function(el) {
      // DOM element pointers
      this.el = el;
      this.linkedYobEl = $$("[name='"+el.readAttribute("data-linked-field-name")+"']")[0];
      if (!this.linkedYobEl) {
        console &amp;&amp; console.error("Linked date element not found");
      }

      // Bind methods
      this._handleAgeChange = this._handleAgeChange.bind(this);
      this._handleYobChange = this._handleYobChange.bind(this);

      // Attach handlers
      this.linkedYobEl.observe('input', this._handleYobChange);
      this.el.observe('input', this._handleAgeChange);

      // Save in the DOM
      this.el.__linkedAgeAndBirthYear = this;
    },

    _handleAgeChange: function() {
      var age = parseInt(this.el.value);
      if (age &gt;=0 &amp;&amp; age &lt; 150) {
        var yob = (new Date().getFullYear()) - age;
      } else {
        var yob = "";
      }
      this.linkedYobEl.setValue(yob);
    },

    _handleYobChange: function() {
      var yob = parseInt(this.linkedYobEl.value);
      if (yob &gt;= 1300 &amp;&amp; yob &lt; 2100) {
        var age = (new Date().getFullYear()) - yob;
      } else {
        var age = "";
      }
      this.el.setValue(age);
    },
  });

  var init = function(event) {
    ((event &amp;&amp; event.memo.elements) || [$('body')]).each(function(element) {
      element.select('input[type="text"].pt-linked-age-and-birth-year').each(function(item) {
        if (!item.__linkedAgeAndBirthYear) {
          new PhenoTips.widgets.LinkedAgeAndBirthYear(item);
        }
      });
    });
    return true;
  };

  (XWiki.domIsLoaded &amp;&amp; init()) || document.observe("xwiki:dom:loaded", init);
  document.observe("xwiki:dom:updated", init);

  // End PhenoTips augmentation.
  return PhenoTips;
}(PhenoTips || {}));</code>
    </property>
    <property>
      <name>Sync age filters to YOB filters</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
